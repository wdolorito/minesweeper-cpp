ENV["LC_ALL"] = "en_US.UTF-8"

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"
  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.vm.provider "virtualbox" do |vb|
    vb.memory = "2048"
    vb.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
  end

  config.vm.define "native-build-x86_64" do |native_x86_64|
    native_x86_64.vm.provider "virtualbox" do |vb|
      vb.name = "ubuntu-bionic64-native"
    end
    native_x86_64.vm.synced_folder "../", "/home/vagrant/project"
    native_x86_64.vm.hostname = "ubuntu-bionic64-native"
    native_x86_64.vm.provision "file", source: "native-build-project.sh", destination: "/tmp/build-project.sh"
    native_x86_64.vm.provision "file", source: "native-build-wxWidgets.sh", destination: "/tmp/build-wxWidgets.sh"
    native_x86_64.vm.provision "shell", path: "native-install-tools.sh"
  end

  config.vm.define "armhf-cross-build" do |armhf_cross|
    armhf_cross.vm.provider "virtualbox" do |vb|
      vb.name = "ubuntu-bionic64-armhf-cross"
    end
    armhf_cross.vm.synced_folder "../", "/home/vagrant/project"
    armhf_cross.vm.hostname = "ubuntu-bionic64-armhf-cross"
    armhf_cross.vm.provision "file", source: "arm-cross-build-project.sh", destination: "/tmp/build-project.sh"
    armhf_cross.vm.provision "file", source: "arm-cross-build-wxWidgets.sh", destination: "/tmp/build-wxWidgets.sh"
    armhf_cross.vm.provision "file", source: "arm-cross-build-chroot.sh", destination: "/tmp/build-chroot.sh"
    armhf_cross.vm.provision "file", source: "arm-cross-enter-chroot.sh", destination: "/tmp/enter-chroot.sh"
    armhf_cross.vm.provision "file", source: "arm-cross-cleanup-chroot.sh", destination: "/tmp/cleanup-chroot.sh"
    armhf_cross.vm.provision "shell", path: "arm-cross-install-tools.sh"
  end

  config.vm.define "mingw-cross-build" do |mingw_cross|
    mingw_cross.vm.provider "virtualbox" do |vb|
      vb.name = "ubuntu-bionic64-mingw-cross"
    end
    mingw_cross.vm.synced_folder "../", "/home/vagrant/project"
    mingw_cross.vm.hostname = "ubuntu-bionic64-mingw-cross"
    mingw_cross.vm.provision "file", source: "mingw-cross-build-project.sh", destination: "/tmp/build-project.sh"
    mingw_cross.vm.provision "file", source: "mingw-cross-build-wxWidgets.sh", destination: "/tmp/build-wxWidgets.sh"
    mingw_cross.vm.provision "shell", path: "mingw-cross-install-tools.sh"
  end
end
